package presentacion;

import crearRutina.FCrearRutina;
import crearRutina.ICrearRutina;
import dtos.DiaDTO;
import dtos.RutinaDTO;
import dtos.UsuarioDTO;
import extras.ValidadoresPresentacion;
import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import javax.swing.JOptionPane;
import negocio.DiaBO;
import negocio.UsuariosBO;
import obtenerUsuarios.FObtenerUsuarios;
import obtenerUsuarios.IObtenerUsuarios;
import registrarUsuario.FRegistrarUsuario;
import registrarUsuario.IRegistrarUsuario;

/**
 *
 * @author af_da
 */
public class RegistroUsuario extends javax.swing.JFrame {

    private IRegistrarUsuario registroUsuario;
    private ICrearRutina crearRutina;
    private IObtenerUsuarios obtenerUsuario;

    /**
     * Creates new form dlg_RegistroUsuario
     */
    public RegistroUsuario() {
        initComponents();
        registroUsuario = new FRegistrarUsuario();
        crearRutina = new FCrearRutina();
        obtenerUsuario = new FObtenerUsuarios();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtUsuario = new javax.swing.JTextField();
        txtcontra1 = new javax.swing.JPasswordField();
        txtEdad = new javax.swing.JTextField();
        txtPeso = new javax.swing.JTextField();
        txtEstatura = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtContra2 = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre:");

        jLabel2.setText("Usuario:");

        jLabel4.setText("Edad:");

        jLabel3.setText("Peso:");

        jLabel5.setText("Estatura:");

        jLabel6.setText("Contraseña");

        jLabel7.setText("Repita");

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel8.setText("Ingrese los datos de su cuenta:");

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        jLabel9.setText("Kg");

        jLabel10.setText("Metros");

        jLabel11.setText("Años");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEdad)
                                    .addComponent(txtUsuario)
                                    .addComponent(txtPeso)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtNombre))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtcontra1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtEstatura))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtContra2, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(22, 22, 22))))
            .addGroup(layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(btnCancelar)
                .addGap(71, 71, 71)
                .addComponent(btnAceptar)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEstatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcontra1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtContra2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnAceptar))
                .addGap(25, 25, 25))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        LoginUsuario login = new LoginUsuario();
        login.setVisible(true);
        this.dispose();
                
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        if (validarCampos()) {
            String nombre = txtNombre.getText();
            String usuario = txtUsuario.getText();
            String edad = txtEdad.getText();
            String peso = txtPeso.getText();
            String estatura = txtEstatura.getText();
            char[] contrasenia = txtcontra1.getPassword();
            UsuarioDTO usuarioDTO = new UsuarioDTO(null, nombre, usuario, String.valueOf(contrasenia), Integer.parseInt(edad), Float.parseFloat(peso), Float.parseFloat(estatura));
            UsuarioDTO usuarioCreado = registroUsuario.registrarUsuario(usuarioDTO);

            if (usuarioCreado == null) {
                JOptionPane.showMessageDialog(this, "No se ha podido crear el usuario");
            }

            UsuariosBO usuarioBO = new UsuariosBO();
            UsuarioDTO usuarioConsultadoDTO = usuarioBO.loginUsuario(usuarioDTO);
            if (usuarioConsultadoDTO != null) {
                DiaBO diasBO = new DiaBO();
                List<DiaDTO> dias = diasBO.obtenerDias();
                AtomicInteger index = new AtomicInteger();

                dias.forEach(dia -> {
                    int currentIndex = index.getAndIncrement() + 1;

                    DiaDTO diaNuevo = new DiaDTO(Long.parseLong(String.valueOf(currentIndex)), dia.nombre());
                    RutinaDTO rutinaDTO = new RutinaDTO(-1L, null, usuarioConsultadoDTO, diaNuevo);
                    crearRutina.crearRutina(rutinaDTO);
                });

                System.out.println("Rutina creada con éxito.");
                SeguimientoEjercicioPresentacion.USUARIO = usuarioConsultadoDTO;
                Menu menu = new Menu();
                menu.setVisible(true);
                this.dispose();
            } else {
                System.out.println("Error en el inicio de sesión.");
            }
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private boolean validarCampos(){
        // Nombre
        if (!txtNombre.getText().isBlank()) {
            if (!ValidadoresPresentacion.esSoloTexto(txtNombre.getText())) {
                JOptionPane.showMessageDialog(this, "El nombre solo puede ser letras");
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(this, "El nombre no puede estar vacio");
            return false;
        }
        // Usuario
        if (!txtUsuario.getText().isBlank()) {
            if (!ValidadoresPresentacion.esSoloTexto(txtUsuario.getText())) {
                JOptionPane.showMessageDialog(this, "El usuario solo puede ser letras");
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(this, "El usuario no puede estar vacio");
            return false;
        }
        // verificar si ya existe el usuario
        if (obtenerUsuario.verificarUsuario(txtUsuario.getText())) {
            JOptionPane.showMessageDialog(this, "El nombre de usuario ya se encuentra registrado");
            return false;
        }
        // Edad
        if (!txtEdad.getText().isBlank()) {
            if (!ValidadoresPresentacion.esNumeroEntero(txtEdad.getText())) {
                JOptionPane.showMessageDialog(this, "La edad solo puede ser numeros");
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(this, "La edad no puede estar vacia");
            return false;
        }
        // Peso
        if (!txtPeso.getText().isBlank()) {
            if (!ValidadoresPresentacion.esNumeroDecimal(txtPeso.getText())) {
                JOptionPane.showMessageDialog(this, "El peso solo puede ser numeros y hasta 2 decimales");
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(this, "El peso no puede estar vacia");
            return false;
        }
        // Estatura
        if (!txtEstatura.getText().isBlank()) {
            if (!ValidadoresPresentacion.esNumeroDecimal(txtEstatura.getText())) {
                JOptionPane.showMessageDialog(this, "La estatura solo puede ser numeros y hasta 2 decimales");
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(this, "La estatura no puede estar vacia");
            return false;
        }
        // Contraseña
        if (!txtcontra1.getText().isBlank()) {
            if (!ValidadoresPresentacion.esContrasenaValida(txtcontra1.getText())) {
                JOptionPane.showMessageDialog(this, "La contraseña debe tener por lo menos 8 caracteres, de los cuales tiene por lo menos un caracter especial '*¡?()!_-', una mayuscula, una minuscula y un numero");
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(this, "La contraseña no puede estar vacia");
            return false;
        }
        // Contraseña 2
        if (!txtContra2.getText().isBlank()) {
            if (!txtContra2.getText().equals(txtcontra1.getText())) {
                JOptionPane.showMessageDialog(this, "Las contraseñas deben coincidir");
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe repetir la contraseña");
            return false;
        }
        
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField txtContra2;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtEstatura;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPeso;
    private javax.swing.JTextField txtUsuario;
    private javax.swing.JPasswordField txtcontra1;
    // End of variables declaration//GEN-END:variables
}
